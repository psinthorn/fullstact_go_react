version: '3'

services:
  # System requirement before start to implement any other apps
  postgres:
    image: 'postgres:14.2'
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users
    logging:
      options:
        max-size: 10m
        max-file: '3'
    ports:
      - '5432:5432'
    volumes:
      - ./db-data/postgres:/var/lib/postgresql/data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  pgadmin:
    # pgadmin container service work depends on postgres container service (db_postgres)
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 5433:80
    volumes:
      - ./db-data/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - 27017:27017
    environment:
      # MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./mongo_data/mongo/:/data/db #mongo_data is a folder to store mongo data
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js #init-mongo.js is a script to create database and user

  # Mongo-Express container service
  # container name
  mongo-express:
    image: mongo-express:latest
    ports:
      - 27018:8081
    environment:
      # default username and password for mongo-express is admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME} #refer to mongodb root username
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD} #refer to mongodb root password
      ME_CONFIG_MONGODB_SERVER: ${MONGODB_SERVER} #refer mongodb container name
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true

      # - ME_CONFIG_MONGODB_PORT=27017
      # - ME_CONFIG_MONGODB_URL="mongodb://mongo:27017"
    links:
      - ${MONGODB_SERVER}
    # volumes:
    #   - ./config.js:/node_modules/mongo-express/config.js
    depends_on:
      - ${MONGODB_SERVER}

  # Docker container for application is from here

  broker-service:
    build:
      # context refer to app folder
      # and path to dockerfile
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - '8080:80'
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      # context refer to app folder
      context: ./../auth-service
      dockerfile: ./../auth-service/auth-service.dockerfile
    restart: always
    ports:
      - '8081:80'
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: 'host=postgres port=5432 user=postgres password=postgres dbname=users sslmode=disable timezone=UTC connect_timeout=5'

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    ports:
      - '8082:80'
    deploy:
      mode: replicated
      replicas: 1
    logging:
      options:
        max-size: 10m
        max-file: '3'
